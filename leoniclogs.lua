--[[
Leonic Shop Log noti

]]--

local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26=897 -(229 + 668) ;local v27;while true do local v42=1975 -(1913 + 62) ;while true do if (v42==(0 + 0)) then if (v26==(2 -1)) then return v5(v27);end if (v26==(1933 -(565 + 1368))) then local v128=0 -0 ;while true do if (v128==1) then v26=1662 -(1477 + 184) ;break;end if (v128==(0 -0)) then v27={};for v138=1 + 0 , #v24 do v6(v27,v0(v4(v1(v2(v24,v138,v138 + (857 -(564 + 292)) )),v1(v2(v25,1 + (v138% #v25) ,1 + (v138% #v25) + (1 -0) )))%(771 -515) ));end v128=305 -(244 + 60) ;end end end break;end end end end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v28,v29,...) local v30=2 -1 ;local v31;v28=v12(v11(v28,4 + 1 ),v7("\55\187","\133\25\149\137\225\34\129\168"),function(v43) if (v9(v43,478 -(41 + 435) )==(1080 -(938 + 63))) then local v108=0 + 0 ;local v109;while true do if ((1125 -(936 + 189))==v108) then v109=0;while true do if (v109==0) then local v137=0;while true do if (v137==(0 + 0)) then v31=v8(v11(v43,(1615 -(1565 + 48)) -(1 + 0) ,1139 -(782 + 356) ));return "";end end end end break;end end else local v110=0;local v111;while true do if ((267 -(176 + 91))==v110) then v111=v10(v8(v43,41 -25 ));if v31 then local v132=0;local v133;local v134;while true do if (v132==(0 -0)) then local v145=1092 -(975 + 117) ;while true do if (1==v145) then v132=1;break;end if (v145==(1875 -(157 + 1718))) then v133=0 + 0 ;v134=nil;v145=3 -2 ;end end end if (v132==(3 -2)) then while true do local v146=1018 -(697 + 321) ;while true do if (v146==0) then if (v133==(0 -0)) then local v154=0 -0 ;while true do if (v154==(0 -0)) then v134=v13(v111,v31);v31=nil;v154=1 + 0 ;end if (v154==(1 -0)) then v133=2 -1 ;break;end end end if (v133==(1228 -(322 + 905))) then return v134;end break;end end end break;end end else return v111;end break;end end end end);local function v32(v44,v45,v46) if v46 then local v112=(v44/((613 -(602 + 9))^(v45-(1190 -(449 + 740)))))%((3 -(873 -(826 + 46)))^(((v46-(948 -(245 + 702))) -(v45-(3 -2))) + 1 + 0)) ;return v112-(v112%(1899 -(260 + 1638))) ;else local v113=0;local v114;while true do if ((440 -(382 + 58))==v113) then v114=2^(v45-(3 -2)) ;return (((v44%(v114 + v114))>=v114) and (1 + 0)) or (0 -0) ;end end end end local function v33() local v47=0 -0 ;local v48;while true do local v82=0;while true do if (v82==(1205 -(902 + 303))) then if (v47==(0 -0)) then local v131=0 -0 ;while true do if ((1 + 0)==v131) then v47=1691 -(1121 + 569) ;break;end if (v131==(214 -(22 + 192))) then v48=v9(v28,v30,v30);v30=v30 + (684 -(483 + 200)) ;v131=1464 -(1404 + 59) ;end end end if (v47==(2 -1)) then return v48;end break;end end end end local function v34() local v49=0 -0 ;local v50;local v51;while true do if (v49==(766 -(468 + 297))) then return (v51 * (818 -(334 + 228))) + v50 ;end if (v49==(0 -0)) then v50,v51=v9(v28,v30,v30 + (4 -2) );v30=v30 + 2 ;v49=1 -0 ;end end end local function v35() local v52=0 + 0 ;local v53;local v54;local v55;local v56;local v57;while true do if (v52==(236 -(141 + 95))) then local v117=0 + 0 ;while true do if ((0 -0)==v117) then v53=0;v54=nil;v117=1;end if (v117==(2 -1)) then v52=1;break;end end end if (v52==(1 + 0)) then v55=nil;v56=nil;v52=5 -3 ;end if (v52==(2 + 0)) then v57=nil;while true do local v119=0 + 0 ;while true do if (v119==0) then if (v53==0) then v54,v55,v56,v57=v9(v28,v30,v30 + (4 -1) );v30=v30 + 3 + 1 ;v53=164 -(92 + 71) ;end if (1==v53) then return (v57 * (43216383 -(13059464 + 13379703))) + (v56 * 65536) + (v55 * 256) + v54 ;end break;end end end break;end end end local function v36() local v58=v35();local v59=v35();local v60=1 -0 ;local v61=(v32(v59,766 -(574 + 191) ,20) * ((2 + 0)^(79 -47))) + v58 ;local v62=v32(v59,11 + 10 ,880 -(254 + 595) );local v63=((v32(v59,158 -(55 + 71) )==1) and  -(1 -0)) or (1791 -(573 + 1217)) ;if (v62==0) then if (v61==((1714 -1095) -(43 + 512 + 64))) then return v63 * (0 -0) ;else local v120=0;local v121;while true do if (v120==(939 -(714 + 225))) then v121=0 -0 ;while true do if (v121==0) then v62=1 -0 ;v60=0 + 0 ;break;end end break;end end end elseif (v62==(2963 -916)) then return ((v61==(806 -(118 + 688))) and (v63 * (1/(48 -(25 + 23))))) or (v63 * NaN) ;end return v16(v63,v62-(199 + 824) ) * (v60 + (v61/((1888 -(927 + 959))^52))) ;end local function v37(v64) local v65=0 -0 ;local v66;local v67;local v68;while true do if (v65==1) then v68=nil;while true do local v122=732 -(16 + 716) ;while true do if (v122==(1 -0)) then if (v66==(97 -(11 + 86))) then v67=nil;if  not v64 then local v147=0 -0 ;local v148;while true do if (v147==0) then v148=0;while true do if (v148==(285 -(175 + 110))) then v64=v35();if (v64==(0 -0)) then return "";end break;end end break;end end end v66=4 -3 ;end if (v66==2) then local v139=0;while true do if (v139==(1797 -(503 + 1293))) then v66=8 -5 ;break;end if (0==v139) then v68={};for v151=1 + 0 , #v67 do v68[v151]=v10(v9(v11(v67,v151,v151)));end v139=1062 -(810 + 251) ;end end end break;end if (v122==0) then if (v66==3) then return v14(v68);end if (v66==1) then v67=v11(v28,v30,(v30 + v64) -(932 -(857 + 52 + 22)) );v30=v30 + v64 ;v66=1 + 1 ;end v122=1;end end end break;end if (v65==(0 + 0)) then local v118=533 -(43 + 490) ;while true do if (v118==(733 -(711 + 22))) then v66=0 -0 ;v67=nil;v118=860 -(240 + 619) ;end if (v118==(1 + 0)) then v65=1;break;end end end end end local v38=v35;local function v39(...) return {...},v20("#",...);end local function v40() local v69={};local v70={};local v71={};local v72={v69,v70,nil,v71};local v73=v35();local v74={};for v83=1 + 0 ,v73 do local v84=0;local v85;local v86;local v87;while true do if (v84==(0 + 0)) then local v123=0;while true do if (v123==(0 -0)) then v85=0 -0 ;v86=nil;v123=1;end if (v123==(1740 -(404 + 1335))) then v84=407 -(183 + 223) ;break;end end end if (v84==(1 -0)) then v87=nil;while true do if (v85==(1 + 0)) then if (v86==1) then v87=v33()~=(0 + 0) ;elseif (v86==(339 -(10 + 327))) then v87=v36();elseif (v86==3) then v87=v37();end v74[v83]=v87;break;end if (0==v85) then local v136=0 + 0 ;while true do if (v136==(339 -(118 + 220))) then v85=1;break;end if (v136==(0 + 0)) then v86=v33();v87=nil;v136=450 -(108 + 341) ;end end end end break;end end end v72[3]=v33();for v88=1 + 0 ,v35() do local v89=0;local v90;local v91;while true do if (v89==0) then v90=0;v91=nil;v89=4 -3 ;end if (v89==(1494 -(711 + 782))) then while true do if (v90==(0 -0)) then v91=v33();if (v32(v91,470 -(270 + 199) ,1)==(0 + 0)) then local v140=0;local v141;local v142;local v143;local v144;while true do if (v140==(1820 -(580 + 1239))) then v143=nil;v144=nil;v140=2;end if (v140==(5 -3)) then while true do if (v141==(3 + 0)) then if (v32(v143,1 + 2 ,3)==(1 + 0)) then v144[1 + (7 -4) ]=v74[v144[4]];end v69[v88]=v144;break;end if (v141==(1 + 0)) then v144={v34(),v34(),nil,nil};if (v142==(1790 -(1010 + 780))) then v144[(930 + 0) -((1019 -805) + 713) ]=v34();v144[11 -7 ]=v34();elseif (v142==(1837 -(1045 + 791))) then v144[7 -4 ]=v35();elseif (v142==2) then v144[3]=v35() -((2 -0)^(521 -(351 + 154))) ;elseif (v142==(1577 -(1281 + 293))) then v144[269 -(28 + 238) ]=v35() -((4 -2)^(1575 -(1381 + 178))) ;v144[4 + 0 ]=v34();end v141=2 + 0 ;end if (v141==(1 + 1)) then if (v32(v143,(3 -2) + 0 + 0 ,471 -(381 + 89) )==(1 + 0)) then v144[2 + 0 ]=v74[v144[2 -0 ]];end if (v32(v143,2,1158 -(1074 + 82) )==1) then v144[3]=v74[v144[6 -3 ]];end v141=1787 -(214 + 1570) ;end if ((1455 -(990 + 465))==v141) then v142=v32(v91,1 + 1 ,2 + 1 );v143=v32(v91,4 + 0 ,(2258 -1684) -((2093 -(1668 + 58)) + (827 -(512 + 114))) );v141=2 -1 ;end end break;end if (v140==0) then v141=0 -0 ;v142=nil;v140=1;end end end break;end end break;end end end for v92=1,v35() do v70[v92-(3 -2) ]=v40();end return v72;end local function v41(v76,v77,v78) local v79=v76[1 + 0 ];local v80=v76[2];local v81=v76[1 + 2 ];return function(...) local v94=v79;local v95=v80;local v96=v81;local v97=v39;local v98=1;local v99= -(1 + 0);local v100={};local v101={...};local v102=v20("#",...) -(3 -2) ;local v103={};local v104={};for v115=1994 -(109 + 1885) ,v102 do if (v115>=v96) then v100[v115-v96 ]=v101[v115 + (1470 -(1269 + 200)) ];else v104[v115]=v101[v115 + 1 ];end end local v105=(v102-v96) + (1 -0) ;local v106;local v107;while true do local v116=815 -(98 + 717) ;while true do if ((827 -(802 + 24))==v116) then if (v107<=52) then if (v107<=((1554 -652) -((355 -73) + 88 + 507))) then if (v107<=((1267 + 382) -(251 + 1272 + 114))) then if (v107<=(2 + 3)) then if (v107<=(5 -3)) then if (v107<=0) then v104[v106[6 -4 ]][v104[v106[3]]]=v106[2 + 2 ];elseif (v107==(1 + 0)) then local v219=0 + 0 ;local v220;while true do if (v219==(0 + 0)) then v220=v106[2];v104[v220](v104[v220 + 1 + 0 ]);break;end end else do return v104[v106[1435 -(797 + 636) ]]();end end elseif (v107<=(14 -11)) then local v165=1619 -(1427 + 192) ;local v166;while true do if (0==v165) then v166=v106[1 + 1 ];v104[v166](v21(v104,v166 + (2 -1) ,v106[3 + 0 ]));break;end end elseif (v107==(2 + 2)) then local v221=0;local v222;local v223;local v224;while true do if (v221==(326 -(192 + 134))) then v222=1276 -(316 + 960) ;v223=nil;v221=1;end if (v221==(1 + 0)) then v224=nil;while true do if (v222==(1 + 0)) then while true do if ((0 + 0)==v223) then v224=v106[(7 -5) + (551 -(83 + 468)) ];v104[v224](v104[v224 + 1 ]);break;end end break;end if ((1806 -(1202 + 604))==v222) then v223=0 -0 ;v224=nil;v222=1 -0 ;end end break;end end else local v225=v106[5 -3 ];v104[v225]=v104[v225](v21(v104,v225 + 1 ,v106[328 -(45 + 280) ]));end elseif (v107<=(8 + 0)) then if (v107<=(6 + 0)) then local v167=0;local v168;local v169;local v170;while true do if (v167==(0 + 0)) then v168=0 + 0 ;v169=nil;v167=1 + 0 ;end if (v167==(1 -0)) then v170=nil;while true do if (v168==(1911 -(340 + 1571))) then local v463=0 + 0 ;while true do if (v463==0) then v169=v106[3];v170=v104[v169];v463=1773 -(1733 + 39) ;end if (v463==1) then v168=1;break;end end end if (v168==(2 -1)) then for v505=v169 + 1 ,v106[4] do v170=v170   .. v104[v505] ;end v104[v106[2]]=v170;break;end end break;end end elseif (v107>(1041 -(125 + 909))) then local v227=v106[1950 -(1096 + 852) ];local v228=v104[v227];for v392=v227 + ((1 + 0) -(0 -0)) ,v106[3 + 0 ] do v15(v228,v104[v392]);end elseif  not v104[v106[2]] then v98=v98 + ((1578 -(409 + 103)) -((304 -(46 + 190)) + 997)) ;else v98=v106[98 -(51 + 44) ];end elseif (v107<=(1280 -(226 + 295 + 749))) then if (v107==(1326 -(1114 + 203))) then v104[v106[728 -(228 + 498) ]]=v77[v106[3]];else do return;end end elseif (v107>11) then local v231=0 + 0 ;local v232;local v233;local v234;while true do if (v231==(1 + 0)) then v234=nil;while true do if (v232==0) then v233=0;v234=nil;v232=1;end if (v232==(664 -(174 + 489))) then while true do if ((0 -0)==v233) then v234=v104[v106[1909 -(830 + 1075) ]];if  not v234 then v98=v98 + (525 -(303 + 221)) ;else v104[v106[2]]=v234;v98=v106[3];end break;end end break;end end break;end if (v231==0) then v232=1269 -(231 + 1038) ;v233=nil;v231=1 + 0 ;end end else v104[v106[1164 -(171 + 991) ]]=v104[v106[3]]%v106[16 -12 ] ;end elseif (v107<=(48 -30)) then if (v107<=(37 -22)) then if (v107<=(11 + 2)) then local v171=0 -0 ;local v172;local v173;local v174;local v175;while true do if (v171==(0 -0)) then v172=0 -0 ;v173=nil;v171=3 -2 ;end if (v171==2) then while true do if (v172==(1248 -(111 + 1137))) then v173=v106[160 -(91 + 67) ];v174={v104[v173](v21(v104,v173 + ((1 + 3) -(526 -(423 + 100))) ,v106[1 + 2 ]))};v172=2 -1 ;end if ((1 + 0)==v172) then v175=0;for v506=v173,v106[(892 -(326 + 445)) -((139 -107) + (188 -103)) ] do local v507=0;local v508;while true do if (v507==(0 -0)) then v508=711 -(530 + 181) ;while true do if (v508==(881 -(614 + 267))) then v175=v175 + (33 -(19 + 13)) ;v104[v506]=v174[v175];break;end end break;end end end break;end end break;end if (v171==(1 -0)) then v174=nil;v175=nil;v171=4 -2 ;end end elseif (v107>(39 -25)) then v104[v106[1 + 1 ]]=v104[v106[(4 -1) + (0 -0) ]][v106[(1813 -(1293 + 519)) + 3 ]];elseif (v104[v106[3 -1 ]]==v106[9 -5 ]) then v98=v98 + (1 -0) ;else v98=v106[12 -9 ];end elseif (v107<=((2291 -1318) -(473 + 419 + 65))) then if (v104[v106[1 + 1 ]]<v106[(20 -11) -(2 + 3) ]) then v98=v98 + 1 + 0 ;else v98=v106[2 + 1 ];end elseif (v107>(1113 -(709 + 387))) then v104[v106[1860 -(673 + 1185) ]]=v104[v106[8 -5 ]]%v104[v106[12 -8 ]] ;else v104[v106[2]][v104[v106[4 -1 ]]]=v106[4];end elseif (v107<=(16 + 5)) then if (v107<=(15 + 4)) then v104[v106[2]][v104[v106[3]]]=v104[v106[5 -1 ]];elseif (v107==(5 + 15)) then v104[v106[2]]={};else v104[v106[3 -1 ]]=v104[v106[5 -2 ]] + v106[4] ;end elseif (v107<=(1903 -(446 + 1434))) then if (v107>(1305 -(1040 + 243))) then v104[v106[5 -3 ]]=v106[(1852 -(559 + 1288)) -2 ]~=((1931 -(609 + 1322)) -(454 -(13 + 441))) ;else local v245=0;local v246;local v247;local v248;while true do if (v245==0) then local v422=0;while true do if ((0 -0)==v422) then v246=v106[5 -3 ];v247={v104[v246](v21(v104,v246 + 1 ,v106[3]))};v422=4 -3 ;end if (v422==(1 + 0)) then v245=3 -2 ;break;end end end if (v245==1) then v248=0 + 0 ;for v466=v246,v106[2 + 2 ] do local v467=0 -0 ;while true do if (v467==(0 + 0)) then v248=v248 + ((645 -294) -(87 + 174 + 89)) ;v104[v466]=v247[v248];break;end end end break;end end end elseif (v107==24) then do return v104[v106[2]]();end else v104[v106[2]]=v106[2 + 1 ]~=0 ;end elseif (v107<=(28 + 10)) then if (v107<=31) then if (v107<=((175 + 33) -(67 + 111 + 2))) then if (v107<=(459 -(153 + 280))) then local v178=0 -0 ;local v179;local v180;local v181;while true do if (v178==(1 + 0)) then v181=nil;while true do if (v179==1) then for v509=v180 + 1 + 0 + 0 ,v99 do v15(v181,v104[v509]);end break;end if (v179==(0 + 0)) then local v468=0 + 0 ;while true do if (v468==1) then v179=1 + 0 ;break;end if (v468==0) then v180=v106[2 -0 ];v181=v104[v180];v468=1;end end end end break;end if (v178==(0 + 0)) then v179=0;v180=nil;v178=668 -(89 + 578) ;end end elseif (v107>((47 + 18) -38)) then local v250=0;local v251;local v252;local v253;local v254;while true do if (v250==0) then local v423=0 -0 ;while true do if ((1050 -(572 + 477))==v423) then v250=1 + 0 ;break;end if (v423==(0 + 0)) then v251=v106[1 + 1 + (86 -(84 + 2)) ];v252,v253=v97(v104[v251](v21(v104,v251 + (1 -0) ,v99)));v423=1 + 0 ;end end end if (v250==(843 -(497 + 345))) then v99=(v253 + v251) -(1 + 0) ;v254=0 + 0 ;v250=2;end if (v250==(1335 -(605 + 728))) then for v469=v251,v99 do v254=v254 + (3 -(2 + 0)) ;v104[v469]=v252[v254];end break;end end elseif (v104[v106[2]]==v106[4]) then v98=v98 + (1 -0) ;else v98=v106[3];end elseif (v107<=(2 + 27)) then local v182=0 -0 ;local v183;local v184;while true do if ((0 + 0)==v182) then v183=0 -0 ;v184=nil;v182=1 + 0 ;end if (v182==1) then while true do if (v183==0) then v184=v106[491 -(457 + 32) ];v104[v184]=v104[v184](v21(v104,v184 + ((405 + 548) -(802 + (1552 -(832 + 570)))) ,v99));break;end end break;end end elseif (v107==(29 + 1)) then v104[v106[1 + 1 ]]=v77[v106[3]];else local v257=v106[6 -4 ];local v258=v104[v257];for v393=v257 + 1 + 0 ,v99 do v15(v258,v104[v393]);end end elseif (v107<=((887 -(588 + 208)) -(153 -96))) then if (v107<=32) then local v185=1800 -(884 + 916) ;local v186;local v187;while true do if (v185==(0 -0)) then local v394=0 + 0 ;while true do if (v394==(654 -(232 + 421))) then v185=1890 -(1569 + 320) ;break;end if (0==v394) then v186=0 + 0 ;v187=nil;v394=1 + 0 ;end end end if (v185==(3 -2)) then while true do if (v186==(605 -(316 + 289))) then v187=v106[(7 -4) -(1 + 0) ];v104[v187]=v104[v187]();break;end end break;end end elseif (v107>33) then if v104[v106[1455 -(666 + 787) ]] then v98=v98 + 1 ;else v98=v106[428 -(360 + 65) ];end else local v259=0 + 0 ;local v260;local v261;local v262;local v263;while true do if (v259==2) then for v476=v260,v99 do local v477=254 -(79 + 175) ;while true do if (v477==0) then v263=v263 + 1 ;v104[v476]=v261[v263];break;end end end break;end if (v259==(0 -0)) then local v424=0;while true do if (v424==0) then v260=v106[2 + 0 ];v261,v262=v97(v104[v260](v104[v260 + (2 -1) ]));v424=1;end if (v424==(1 -0)) then v259=1;break;end end end if (v259==(900 -(503 + 396))) then v99=(v262 + v260) -(182 -(92 + 89)) ;v263=0 -0 ;v259=2 + 0 ;end end end elseif (v107<=(22 + 14)) then if (v107==(137 -102)) then v104[v106[1 + 1 ]]=v104[v106[6 -3 ]];else local v266=0;local v267;local v268;while true do if (v266==(0 + 0)) then v267=0 + 0 ;v268=nil;v266=2 -1 ;end if (v266==1) then while true do if (0==v267) then v268=v106[1 + 1 ];v104[v268]=v104[v268](v104[v268 + 1 + 0 ]);break;end end break;end end end elseif (v107==(55 -18)) then if v104[v106[1246 -(485 + 759) ]] then v98=v98 + 1 ;else v98=v106[3];end else v104[v106[4 -2 ]]=v104[v106[1192 -(442 + 747) ]];end elseif (v107<=(1180 -(832 + 303))) then if (v107<=(987 -(88 + 858))) then if (v107<=(12 + 27)) then v104[v106[2 + 0 ]][v106[1 + 2 ]]=v104[v106[793 -(766 + 23) ]];elseif (v107==(197 -157)) then v104[v106[2 -0 ]]=v104[v106[3]]/v104[v106[4]] ;else local v272=0 -0 ;local v273;while true do if (v272==0) then v273=v106[(3390 -2391) -(915 + 82) ];v104[v273]=v104[v273](v104[v273 + (1074 -(1036 + 37)) ]);break;end end end elseif (v107<=43) then if (v107==42) then local v274=v106[2 + 0 ];v104[v274]=v104[v274](v21(v104,v274 + (1 -0) ,v99));else local v276=0;local v277;while true do if (v276==(0 + 0)) then v277=v106[1482 -(641 + 839) ];v104[v277]=v104[v277](v21(v104,v277 + (914 -(910 + 3)) ,v106[7 -4 ]));break;end end end elseif (v107>(1728 -(1466 + 218))) then if (v106[2]<=v104[v106[2 + 2 ]]) then v98=v98 + (1149 -(556 + 592)) ;else v98=v106[2 + 1 ];end else for v395=v106[810 -(329 + 479) ],v106[857 -(174 + 680) ] do v104[v395]=nil;end end elseif (v107<=(164 -116)) then if (v107<=(94 -48)) then local v190=0 + 0 ;local v191;local v192;local v193;local v194;local v195;while true do if (v190==(741 -(396 + 343))) then v195=nil;while true do if (v191==2) then for v510=v192,v99 do v195=v195 + (2 -1) ;v104[v510]=v193[v195];end break;end if (v191==(1 + 0)) then local v478=0;local v479;while true do if (v478==(1477 -(29 + 1448))) then v479=1389 -(135 + 1254) ;while true do if (v479==(3 -2)) then v191=2;break;end if ((0 -0)==v479) then v99=(v194 + v192) -1 ;v195=0;v479=1;end end break;end end end if (v191==(0 + 0)) then local v480=1527 -(389 + 1138) ;local v481;while true do if (v480==(574 -(102 + 472))) then v481=0 + 0 ;while true do if (v481==(0 + 0)) then v192=v106[2];v193,v194=v97(v104[v192](v21(v104,v192 + 1 + 0 ,v106[1548 -(320 + 1225) ])));v481=1;end if (v481==(1 -0)) then v191=1;break;end end break;end end end end break;end if ((0 + 0)==v190) then v191=1464 -(157 + 1307) ;v192=nil;v190=1860 -(821 + 1038) ;end if (v190==(2 -1)) then v193=nil;v194=nil;v190=1 + 1 ;end end elseif (v107==(28 + 19)) then local v278=v106[3 -1 ];do return v21(v104,v278,v99);end elseif (v104[v106[2]]==v104[v106[2 + 2 ]]) then v98=v98 + ((2 -1) -(1026 -(834 + 192))) ;else v98=v106[1 + 2 ];end elseif (v107<=(13 + 37)) then if (v107>(2 + 47)) then v104[v106[2 -0 ]]=v104[v106[307 -(300 + 4) ]] * v106[2 + 2 ] ;else local v280=0;local v281;local v282;while true do if (v280==1) then v104[v281 + (2 -1) ]=v282;v104[v281]=v282[v106[366 -(112 + 250) ]];break;end if (v280==0) then local v432=0 + 0 ;while true do if (v432==(2 -1)) then v280=1 + 0 ;break;end if ((0 + 0)==v432) then v281=v106[2];v282=v104[v106[3]];v432=1;end end end end end elseif (v107==(39 + 12)) then local v283=v106[1 + 1 ];v104[v283](v21(v104,v283 + (1188 -(1069 + 88 + 30)) ,v99));else v104[v106[2]]= #v104[v106[(1420 -(1001 + 413)) -(6 -3) ]];end elseif (v107<=79) then if (v107<=65) then if (v107<=58) then if (v107<=55) then if (v107<=((997 -(244 + 638)) -(755 -(627 + 66)))) then if (v106[5 -3 ]<=v104[v106[606 -(512 + 90) ]]) then v98=v98 + (1907 -(1665 + 241)) ;else v98=v106[720 -(373 + 344) ];end elseif (v107==54) then local v286=0 + 0 ;local v287;local v288;local v289;local v290;while true do if (v286==(1 + 1)) then for v482=v287,v99 do local v483=0 -0 ;while true do if ((0 -0)==v483) then v290=v290 + (1100 -(35 + 1064)) ;v104[v482]=v288[v290];break;end end end break;end if ((1 + 0)==v286) then v99=(v289 + v287) -(2 -1) ;v290=0;v286=2;end if ((0 + 0)==v286) then v287=v106[1238 -(298 + 938) ];v288,v289=v97(v104[v287](v21(v104,v287 + (1260 -(233 + 1026)) + 0 ,v99)));v286=1667 -(636 + 1030) ;end end else local v291=0;local v292;local v293;local v294;local v295;local v296;while true do if (v291==1) then v294=nil;v295=nil;v291=2 + 0 ;end if (v291==2) then v296=nil;while true do if (v292==(0 + 0)) then v293=v106[1 + 1 ];v294,v295=v97(v104[v293](v21(v104,v293 + 1 + 0 ,v106[(225 -(55 + 166)) -(1 + 0) ])));v292=1 + 0 ;end if (1==v292) then v99=(v295 + v293) -1 ;v296=0 -0 ;v292=299 -(36 + 261) ;end if (v292==(3 -1)) then for v551=v293,v99 do local v552=1368 -(34 + 1334) ;local v553;while true do if (v552==(0 + 0)) then v553=0 + 0 ;while true do if (v553==(1283 -(1035 + 248))) then v296=v296 + (22 -(20 + 1)) + 0 + 0 ;v104[v551]=v294[v296];break;end end break;end end end break;end end break;end if (v291==(319 -(134 + 185))) then v292=0;v293=nil;v291=1;end end end elseif (v107<=((1980 -(549 + 584)) -((1053 -(314 + 371)) + 423))) then if (v104[v106[6 -4 ]]<=v106[4]) then v98=v98 + ((971 -(478 + 490)) -(2 + 0)) ;else v98=v106[3];end elseif (v107>(1229 -(786 + 386))) then local v298=0 -0 ;local v299;local v300;local v301;local v302;while true do if (v298==0) then local v434=0;while true do if (1==v434) then v298=1;break;end if (v434==(1379 -(1055 + 324))) then v299=1340 -(1093 + 247) ;v300=nil;v434=1 + 0 ;end end end if (v298==2) then while true do if (v299==0) then local v525=0 + 0 ;while true do if (v525==1) then v299=1;break;end if (v525==0) then v300=v106[7 -5 ];v301=v104[v300];v525=3 -2 ;end end end if (v299==1) then v302=v104[v300 + 2 ];if (v302>(18 -(10 + 8))) then if (v301>v104[v300 + (2 -1) ]) then v98=v106[3];else v104[v300 + (7 -4) ]=v301;end elseif (v301<v104[v300 + (3 -(1 + 1)) ]) then v98=v106[11 -8 ];else v104[v300 + ((1533 -1088) -(314 + 102 + (66 -40))) ]=v301;end break;end end break;end if ((689 -(364 + 324))==v298) then v301=nil;v302=nil;v298=5 -3 ;end end else v104[v106[4 -2 ]]=v104[v106[1 + 2 ]][v106[16 -12 ]];end elseif (v107<=(97 -36)) then if (v107<=(178 -119)) then local v196=1268 -(1249 + 19) ;local v197;local v198;while true do if ((0 + 0)==v196) then v197=0 -0 ;v198=nil;v196=1087 -(686 + 400) ;end if (v196==(1 + 0)) then while true do if (0==v197) then v198=v104[v106[233 -(73 + 156) ]];if  not v198 then v98=v98 + 1 + 0 ;else local v527=811 -(721 + 90) ;local v528;while true do if (v527==(0 + 0)) then v528=0 -0 ;while true do if (v528==(470 -(224 + 246))) then v104[v106[2 -0 ]]=v198;v98=v106[3];break;end end break;end end end break;end end break;end end elseif (v107==(110 -50)) then if (v104[v106[2]]==v104[v106[4]]) then v98=v98 + 1 ;else v98=v106[1 + 2 ];end else v104[v106[2]]={};end elseif (v107<=63) then if (v107==(2 + 60)) then v104[v106[(5 + 1) -4 ]]=v104[v106[5 -2 ]]%v104[v106[4]] ;else local v307=v106[6 -4 ];v104[v307](v21(v104,v307 + (514 -(203 + 310)) ,v99));end elseif (v107==(2057 -(1238 + 755))) then if (v106[2]==v104[v106[1 + 3 ]]) then v98=v98 + 1 ;else v98=v106[1537 -(709 + 825) ];end else v104[v106[2]]=v106[4 -1 ] + v104[v106[4]] ;end elseif (v107<=(104 -32)) then if (v107<=68) then if (v107<=(930 -(196 + 668))) then v104[v106[2]][v106[11 -8 ]]=v104[v106[(3 -1) + (835 -(171 + 662)) ]];elseif (v107>(160 -(4 + 89))) then local v309=0;local v310;local v311;local v312;while true do if (v309==(3 -2)) then v312=nil;while true do if (1==v310) then for v554=v311 + (1 -0) ,v106[2 + 2 ] do v312=v312   .. v104[v554] ;end v104[v106[8 -6 ]]=v312;break;end if (v310==0) then v311=v106[2 + 1 ];v312=v104[v311];v310=1;end end break;end if (v309==0) then local v435=0;while true do if (v435==1) then v309=1487 -(35 + 1451) ;break;end if (v435==(1453 -(28 + 1425))) then v310=1993 -(941 + 1052) ;v311=nil;v435=1;end end end end else local v313=0 + 0 ;local v314;while true do if (v313==0) then v314=v106[2];do return v21(v104,v314,v99);end break;end end end elseif (v107<=(1584 -(822 + 692))) then if (v107==(97 -28)) then local v315=0 + 0 ;local v316;local v317;local v318;while true do if (v315==0) then v316=v106[299 -(45 + 252) ];v317={v104[v316](v21(v104,v316 + 1 + 0 ,v99))};v315=1 + 0 ;end if (v315==(2 -1)) then v318=433 -(114 + 319) ;for v485=v316,v106[4] do local v486=0;while true do if (v486==(0 -0)) then v318=v318 + 1 ;v104[v485]=v317[v318];break;end end end break;end end else v104[v106[2 -0 ]]=v106[2 + 1 ] + v104[v106[5 -1 ]] ;end elseif (v107==((1066 -557) -((2108 -(556 + 1407)) + (1499 -(741 + 465))))) then do return;end else v78[v106[468 -(170 + 295) ]]=v104[v106[2 + 0 ]];end elseif (v107<=(69 + 6)) then if (v107<=(179 -106)) then v104[v106[2 + 0 ]]=v104[v106[2 + 1 ]]/v104[v106[3 + 1 ]] ;elseif (v107==((1734 -(957 + 273)) -(44 + 104 + 282))) then local v322=0 + 0 ;local v323;local v324;local v325;while true do if (v322==(0 -0)) then v323=v95[v106[7 -4 ]];v324=nil;v322=2 -1 ;end if (v322==(9 -7)) then for v487=1,v106[1784 -(389 + 1391) ] do local v488=0 + 0 ;local v489;while true do if (v488==1) then if (v489[1 + 0 ]==((29 -16) + (976 -(783 + 168)))) then v325[v487-(3 -2) ]={v104,v489[9 -6 ]};else v325[v487-(1213 -(1090 + 122)) ]={v77,v489[3]};end v103[ #v103 + (3 -2) ]=v325;break;end if (v488==0) then v98=v98 + 1 + 0 ;v489=v94[v98];v488=1119 -(628 + 490) ;end end end v104[v106[(139 + 635) -(201 + (1413 -842)) ]]=v41(v323,v324,v78);break;end if (v322==1) then local v440=0 -0 ;while true do if (v440==(774 -(431 + 343))) then v325={};v324=v18({},{[v7("\208\15\245\218\254\234\40","\154\143\80\156\180")]=function(v559,v560) local v561=0 -0 ;local v562;local v563;local v564;while true do if ((0 -0)==v561) then v562=0;v563=nil;v561=1 + 0 ;end if (v561==(1 + 0)) then v564=nil;while true do if (v562==1) then while true do if (v563==(1695 -(556 + 1139))) then local v644=0;local v645;while true do if (v644==(15 -(6 + 9))) then v645=0;while true do if (0==v645) then local v650=0 + 0 ;while true do if (v650==0) then local v651=0 + 0 ;while true do if (v651==(169 -(28 + 141))) then v564=v325[v560];return v564[1 + 0 ][v564[2 -0 ]];end end end end end end break;end end end end break;end if (v562==(0 + 0)) then v563=1317 -(486 + 831) ;v564=nil;v562=1;end end break;end end end,[v7("\141\12\5\77\89\52\11\129\183\43","\229\210\83\107\40\46\93\101")]=function(v565,v566,v567) local v568=0;local v569;local v570;while true do if (v568==1) then while true do if (v569==(0 -0)) then v570=v325[v566];v570[3 -2 ][v570[1488 -(189 + 809 + 488) ]]=v567;break;end end break;end if (v568==0) then local v610=0;while true do if (v610==(0 -0)) then v569=1263 -(668 + 595) ;v570=nil;v610=1 + 0 ;end if (v610==1) then v568=1 + 0 ;break;end end end end end});v440=1;end if ((2 -1)==v440) then v322=2;break;end end end end else local v326=290 -(23 + 267) ;local v327;local v328;local v329;while true do if (v326==(1945 -(1129 + 815))) then v329=v104[v327 + 2 ];if (v329>(387 -(371 + 16))) then if (v328>v104[v327 + (1751 -(1326 + 424)) ]) then v98=v106[(2160 -1019) -((423 -307) + (1140 -(88 + 30))) ];else v104[v327 + 3 ]=v328;end elseif (v328<v104[v327 + (772 -(720 + 51)) ]) then v98=v106[6 -3 ];else v104[v327 + (1779 -(421 + 1355)) ]=v328;end break;end if (v326==(0 -0)) then v327=v106[2];v328=v104[v327];v326=1;end end end elseif (v107<=77) then if (v107==(38 + 38)) then local v330=1083 -(286 + 797) ;local v331;local v332;while true do if (v330==(0 -0)) then v331=0 -0 ;v332=nil;v330=1;end if (v330==(440 -(397 + 42))) then while true do if (0==v331) then v332=v106[1 + 1 ];do return v104[v332](v21(v104,v332 + ((804 -(24 + 776)) -(4 -1)) ,v106[788 -(222 + 563) ]));end break;end end break;end end else local v333=0 -0 ;local v334;local v335;local v336;while true do if (v333==(1 + 0)) then v336=nil;while true do if (0==v334) then v335=190 -(23 + 167) ;v336=nil;v334=1799 -(690 + 1108) ;end if (v334==(1 + 0)) then while true do if ((0 + 0)==v335) then v336=v106[(850 -(40 + 808)) + 0 + 0 ];v104[v336](v21(v104,v336 + (3 -2) ,v106[3 + 0 ]));break;end end break;end end break;end if (v333==(0 + 0)) then v334=0 + 0 ;v335=nil;v333=572 -(47 + 524) ;end end end elseif (v107>78) then v104[v106[2]][v104[v106[3]]]=v104[v106[3 + 1 ]];else local v339=0 -0 ;local v340;local v341;local v342;local v343;local v344;while true do if (2==v339) then for v490=1 -0 ,v341 do v104[v342 + v490 ]=v343[v490];end v344=v343[2 -1 ];v339=1729 -(1165 + 561) ;end if (v339==(1 + 0)) then v342=v340 + (6 -4) ;v343={v104[v340](v104[v340 + 1 ],v104[v342])};v339=481 -(341 + 138) ;end if (v339==(0 + 0)) then local v445=0;while true do if (v445==(0 -0)) then v340=v106[328 -(89 + 237) ];v341=v106[(44 -30) -(21 -11) ];v445=1;end if (v445==1) then v339=1;break;end end end if ((884 -(581 + 300))==v339) then if v344 then local v513=1220 -(855 + 365) ;while true do if (v513==0) then v104[v342]=v344;v98=v106[3];break;end end else v98=v98 + 1 ;end break;end end end elseif (v107<=92) then if (v107<=(201 -116)) then if (v107<=(27 + 55)) then if (v107<=(1315 -(1030 + 205))) then local v202=v106[2 + 0 ];local v203,v204=v97(v104[v202](v104[v202 + 1 + 0 ]));v99=(v204 + v202) -(287 -(156 + 130)) ;local v205=0 -0 ;for v216=v202,v99 do local v217=0 -0 ;while true do if (v217==(0 -0)) then v205=v205 + 1 + 0 ;v104[v216]=v203[v205];break;end end end elseif (v107==(48 + 33)) then v78[v106[72 -(10 + 59) ]]=v104[v106[7 -5 ]];else local v347=0 + 0 ;local v348;local v349;local v350;local v351;while true do if (v347==(4 -3)) then v350=nil;v351=nil;v347=1165 -(671 + 492) ;end if (v347==(2 + 0)) then while true do if (v348==1) then v351=0 -(1215 -(369 + 846)) ;for v575=v349,v106[2 + 2 ] do local v576=0 + 0 ;local v577;while true do if (v576==(1945 -(1036 + 909))) then v577=0 + 0 ;while true do if (v577==(0 -0)) then v351=v351 + (204 -(11 + 192)) ;v104[v575]=v350[v351];break;end end break;end end end break;end if (v348==(0 + 0)) then local v535=175 -(135 + 40) ;while true do if (v535==1) then v348=1;break;end if (0==v535) then v349=v106[2];v350={v104[v349](v21(v104,v349 + 1 + 0 ,v99))};v535=1;end end end end break;end if (v347==0) then v348=0;v349=nil;v347=1;end end end elseif (v107<=(182 -99)) then v104[v106[2]]=v104[v106[3]] + v106[1 + (4 -1) ] ;elseif (v107>84) then local v352=0;local v353;while true do if (v352==0) then v353=v106[178 -(50 + 126) ];do return v104[v353](v21(v104,v353 + (2 -1) ,v106[1 + 2 ]));end break;end end else local v354=v106[1415 -(1233 + 180) ];local v355=v106[4];local v356=v354 + (971 -(522 + 447)) ;local v357={v104[v354](v104[v354 + 1 + 0 ],v104[v356])};for v397=2 -1 ,v355 do v104[v356 + v397 ]=v357[v397];end local v358=v357[1 + 0 ];if v358 then local v415=0;local v416;while true do if (v415==(0 -0)) then v416=0 -0 ;while true do if (v416==0) then v104[v356]=v358;v98=v106[1913 -(716 + 1194) ];break;end end break;end end else v98=v98 + 1 + 0 ;end end elseif (v107<=(10 + 78)) then if (v107<=86) then v104[v106[505 -(74 + 429) ]]=v104[v106[(3 -1) + 1 + 0 ]]%v106[4] ;elseif (v107>(198 -111)) then v104[v106[2]]=v106[3 + 0 ];else v104[v106[887 -(261 + 624) ]]=v78[v106[8 -5 ]];end elseif (v107<=(222 -132)) then if (v107>((590 -(279 + 154)) -(846 -(454 + 324)))) then if (v104[v106[(852 + 230) -(1020 + (77 -(12 + 5))) ]]<=v106[4]) then v98=v98 + 1 + 0 ;else v98=v106[(3633 -2207) -(233 + 397 + (1886 -(277 + 816))) ];end else local v363=0 -0 ;local v364;local v365;local v366;while true do if (v363==2) then if (v365>(1183 -(1058 + 125))) then if (v366<=v104[v364 + 1 + 0 ]) then local v578=975 -(815 + 160) ;while true do if ((0 -0)==v578) then v98=v106[7 -4 ];v104[v364 + 1 + 2 ]=v366;break;end end end elseif (v366>=v104[v364 + (2 -1) ]) then local v579=0;local v580;while true do if (v579==0) then v580=1898 -(41 + 1857) ;while true do if (v580==(1893 -(1222 + 671))) then v98=v106[9 -(15 -9) ];v104[v364 + (3 -0) ]=v366;break;end end break;end end end break;end if (v363==(1183 -(229 + 953))) then v366=v104[v364] + v365 ;v104[v364]=v366;v363=1776 -(1111 + 663) ;end if (v363==(1579 -(874 + 705))) then v364=v106[2];v365=v104[v364 + 1 + 1 ];v363=1;end end end elseif (v107>(63 + 28)) then for v400=v106[9 -7 ],v106[6 -3 ] do v104[v400]=nil;end else local v367=0 + 0 ;local v368;local v369;local v370;while true do if ((679 -(642 + 37))==v367) then v368=v106[1 + 1 ];v369=v104[v368];v367=1;end if (v367==(1 + 0)) then v370=v106[7 -4 ];for v493=455 -(233 + 221) ,v370 do v369[v493]=v104[v368 + v493 ];end break;end end end elseif (v107<=((89 -50) + 53 + 7)) then if (v107<=(1636 -(718 + 823))) then if (v107<=(59 + 34)) then local v208=805 -(266 + 539) ;local v209;local v210;local v211;local v212;while true do if (v208==0) then local v402=0 -0 ;while true do if (v402==(1225 -(636 + 589))) then v209=0 -0 ;v210=nil;v402=1 -0 ;end if (v402==(1 + 0)) then v208=1 + 0 ;break;end end end if (v208==2) then while true do if (v209==(1017 -(657 + 358))) then for v514=2 -1 ,v106[8 -4 ] do local v515=1187 -(1151 + 36) ;local v516;while true do if (v515==(0 + 0)) then v98=v98 + 1 ;v516=v94[v98];v515=1 + 0 ;end if (v515==(2 -1)) then if (v516[1833 -(1552 + 280) ]==(1785 -(760 + (1821 -(64 + 770))))) then v212[v514-(1 + 0) ]={v104,v516[(341 + 1575) -(1789 + (1367 -(157 + 1086))) ]};else v212[v514-1 ]={v77,v516[13 -10 ]};end v103[ #v103 + (1 -0) ]=v212;break;end end end v104[v106[2 -0 ]]=v41(v210,v211,v78);break;end if (v209==(819 -(599 + 220))) then local v497=0;while true do if (v497==1) then v209=1;break;end if (v497==(0 -0)) then v210=v95[v106[3]];v211=nil;v497=1;end end end if (1==v209) then local v498=1931 -(1813 + 118) ;local v499;while true do if (0==v498) then v499=0 + 0 ;while true do if (v499==(1217 -(841 + 376))) then v212={};v211=v18({},{[v7("\13\233\137\32\236\8\90","\34\82\182\224\78\136\109")]=function(v619,v620) local v621=0 -0 ;local v622;local v623;while true do if (v621==(1 + 0)) then while true do if ((0 -0)==v622) then local v646=859 -(464 + 395) ;while true do if (0==v646) then v623=v212[v620];return v623[2 -1 ][v623[1 + 1 ]];end end end end break;end if (v621==0) then v622=0;v623=nil;v621=838 -(467 + 370) ;end end end,[v7("\228\221\140\251\204\235\140\250\222\250","\158\187\130\226")]=function(v624,v625,v626) local v627=0;local v628;local v629;while true do if (v627==(1 -0)) then while true do if (v628==0) then v629=v212[v625];v629[(3 + 0) -(6 -4) ][v629[1 + 1 ]]=v626;break;end end break;end if (v627==0) then v628=0;v629=nil;v627=1;end end end});v499=2 -1 ;end if (v499==1) then v209=522 -(150 + 370) ;break;end end break;end end end end break;end if (v208==(1283 -(74 + 1208))) then v211=nil;v212=nil;v208=2;end end elseif (v107==((2115 -1255) -((3533 -2788) + 21))) then v104[v106[1 + 1 + 0 ]]=v106[(397 -(14 + 376)) -4 ];else local v373=0;local v374;local v375;local v376;while true do if (v373==(1 -0)) then v376=nil;while true do if (v374==(1 + 0)) then v104[v375 + 1 + 0 ]=v376;v104[v375]=v376[v106[4 + 0 ]];break;end if (v374==(0 -0)) then v375=v106[2 + 0 ];v376=v104[v106[81 -(23 + 55) ]];v374=1;end end break;end if (v373==(0 -0)) then local v453=0 + 0 ;while true do if ((1 + 0)==v453) then v373=1;break;end if (v453==(0 -0)) then v374=0 + 0 ;v375=nil;v453=902 -(652 + 249) ;end end end end end elseif (v107<=((1016 -636) -(2151 -(708 + 1160)))) then if (v107>(260 -164)) then v104[v106[3 -1 ]]=v104[v106[30 -(10 + 17) ]] * v106[1 + 0 + (1735 -(1400 + 332)) ] ;elseif  not v104[v106[3 -1 ]] then v98=v98 + (1909 -(242 + 1666)) ;else v98=v106[3];end elseif (v107==(42 + 56)) then v98=v106[2 + 1 ];else v104[v106[2 + 0 ]]=v78[v106[3]];end elseif (v107<=(1042 -(850 + 90))) then if (v107<=((137 -58) + (1411 -(360 + 1030)))) then local v213=0 + 0 ;local v214;local v215;while true do if (v213==1) then while true do if (v214==0) then v215=v106[5 -3 ];v104[v215]=v104[v215]();break;end end break;end if (v213==(0 -0)) then v214=1661 -(909 + 752) ;v215=nil;v213=1224 -(109 + 1114) ;end end elseif (v107==(184 -83)) then v98=v106[2 + 1 ];elseif (v106[244 -(6 + 236) ]==v104[v106[3 + 1 ]]) then v98=v98 + 1 ;else v98=v106[1058 -(71 + 16 + (2282 -1314)) ];end elseif (v107<=(181 -77)) then if (v107==(1236 -(1076 + 57))) then local v382=0 + 0 ;local v383;local v384;local v385;while true do if (v382==1) then v385=v106[13 -(699 -(579 + 110)) ];for v502=1,v385 do v384[v502]=v104[v383 + v502 ];end break;end if (v382==0) then local v455=0 + 0 ;local v456;while true do if (v455==(0 + 0)) then v456=0 + 0 ;while true do if (0==v456) then v383=v106[2];v384=v104[v383];v456=408 -(174 + 233) ;end if (v456==(2 -1)) then v382=1;break;end end break;end end end end else local v386=0 -0 ;local v387;local v388;local v389;while true do if (v386==1) then local v457=0 + 0 ;local v458;while true do if (v457==(1174 -(663 + 511))) then v458=0;while true do if (v458==0) then v389=v104[v387] + v388 ;v104[v387]=v389;v458=1;end if (v458==(1 + 0)) then v386=1 + 1 ;break;end end break;end end end if (v386==(0 -0)) then local v459=0 + 0 ;local v460;while true do if (v459==0) then v460=0 -0 ;while true do if (v460==(2 -1)) then v386=1 + 0 ;break;end if (v460==(0 -0)) then v387=v106[2 + 0 ];v388=v104[v387 + 2 ];v460=1 + 0 ;end end break;end end end if (v386==2) then if (v388>(722 -(478 + 244))) then if (v389<=v104[v387 + (518 -(440 + 77)) ]) then local v582=0 + 0 ;local v583;while true do if (v582==0) then v583=0;while true do if ((0 -0)==v583) then v98=v106[3];v104[v387 + 3 ]=v389;break;end end break;end end end elseif (v389>=v104[v387 + 1 ]) then local v584=1556 -(655 + 901) ;local v585;while true do if (v584==0) then v585=0 + 0 ;while true do if (v585==(0 + 0)) then v98=v106[3];v104[v387 + 3 + 0 ]=v389;break;end end break;end end end break;end end end elseif (v107==((386 -290) + (1454 -(695 + 750)))) then v104[v106[2]]= #v104[v106[3]];elseif (v104[v106[6 -4 ]]<v106[6 -2 ]) then v98=v98 + (3 -2) ;else v98=v106[354 -(285 + 66) ];end v98=v98 + (2 -1) ;break;end if (v116==(1310 -(682 + 628))) then local v129=0 + 0 ;local v130;while true do if (v129==0) then v130=299 -(176 + 123) ;while true do if (v130==(0 + 0)) then v106=v94[v98];v107=v106[1];v130=1 + 0 ;end if (1==v130) then v116=1;break;end end break;end end end end end end;end return v41(v40(),{},v29)(...);end return vv17(),...);